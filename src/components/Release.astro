---
import { urlFor } from '../lib/sanityClient';
import type { Release } from '../types/sanity.types';
import { Image } from 'astro:assets';

export interface Props {
  title?: string;
  artwork?: Release['artwork'];
  linkAggregator?: string;
  type?: 'release' | 'untitled';
  embedCode?: string;
}

const { title, artwork, linkAggregator, type, embedCode } = Astro.props;

// Get the artwork URL and dimensions
const artworkUrl = artwork ? urlFor(artwork).width(800).height(800).fit('crop').url() : '';
---
<div class="release-container">
  {type === 'untitled' && embedCode ? (
    <div class="untitled-embed" set:html={embedCode}></div>
  ) : (
    <div class="release-content">
      <h1 class="release-title">{title}</h1>
      {artwork && (
        <div class="artwork-container">
          <Image 
            src={artworkUrl}
            alt={title || 'Release artwork'} 
            class="release-artwork"
            width={800}
            height={800}
            quality="max"
          />
          <div class="artwork-overlay"></div>
        </div>
      )}
      {linkAggregator && (
        <a href={linkAggregator} class="release-listen-btn" target="_blank" rel="noopener noreferrer">
          <span class="btn-text">Listen Now</span>
          <div class="btn-glow"></div>
        </a>
      )}
    </div>
  )}
</div>

<style>
.release-container {
  display: grid;
  grid-column: 1 / -1;
  grid-template-columns: subgrid;
  justify-items: center;
  align-items: center;
  width: 100%;
  padding: 4rem 0;
}

.untitled-embed {
  grid-column: 2 / -2;
  width: 100%;
  max-width: 600px;
}

.release-content {
  grid-column: 2 / -2;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2.5rem;
  max-width: 600px;
  width: 100%;
}

.release-title {
  font-family: 'Smokum', serif;
  font-size: clamp(2.5rem, 5vw, 4rem);
  font-weight: 400;
  letter-spacing: -0.02em;
  line-height: 1.1;
  text-align: center;
  color: var(--color-text);
  margin: 0;
  text-transform: uppercase;
  background: linear-gradient(135deg, var(--color-text) 0%, var(--color-text) 100%);
  background-clip: text;
  -webkit-background-clip: text;
  position: relative;
}

.artwork-container {
  position: relative;
  width: 100%;
  max-width: 500px;
  aspect-ratio: 1/1;
  border-radius: 24px;
  overflow: hidden;
}

.release-artwork {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.artwork-overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.1) 0%,
    transparent 50%,
    rgba(0, 0, 0, 0.1) 100%
  );
  opacity: 0;
}

.release-listen-btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 1rem 2.5rem;
  font-family: 'Courier Prime', monospace;
  font-size: 1.125rem;
  font-weight: 400;
  letter-spacing: 0.025em;
  color: var(--color-text);
  background: transparent;
  border: 1px solid var(--color-text);
  border-radius: 0;
  text-decoration: none;
  text-transform: uppercase;
  overflow: hidden;
  z-index: 1;
}

.btn-text {
  position: relative;
  z-index: 2;
}

.btn-glow {
  position: absolute;
  inset: 0;
  background: var(--color-text);
  border-radius: 0;
  transform: scaleX(0);
  transform-origin: left;
  z-index: 1;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .untitled-embed {
    grid-column: 1 / -1;
    max-width: 100%;
    padding: 0 1rem;
  }
  
  .release-content {
    grid-column: 1 / -1;
    gap: 2rem;
    max-width: 100%;
    padding: 0 1rem;
  }
  
  .release-title {
    font-size: clamp(2rem, 8vw, 3rem);
  }
  
  .artwork-container {
    max-width: 400px;
  }
  
  .release-listen-btn {
    padding: 0.875rem 2rem;
    font-size: 1rem;
  }
}

@media (max-width: 480px) {
  .untitled-embed {
    padding: 0 0.5rem;
  }
  
  .release-content {
    gap: 1.5rem;
    padding: 0 0.5rem;
  }
  
  .artwork-container {
    max-width: 320px;
  }
}
</style> 