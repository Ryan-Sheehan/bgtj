---
import Layout from '../layouts/Layout.astro';
import { getClient } from '../lib/sanityClient';
import AboutContent from '../components/AboutContent.tsx';

const about = await getClient().fetch(`*[_type == 'about'][0]{content, meta}`);
---

<Layout {...(about?.meta ? { meta: about.meta } : {})}>
  <div class="about-container">
    <div class="about-content">
      <AboutContent value={about?.content} />
    </div>
  </div>
</Layout>

<style>
.about-container {
  grid-column: 1 / -1;
  width: 100%;
  padding: 4rem 2.5vw;
  display: grid;
  grid-template-columns: repeat(15, 1fr);
  box-sizing: border-box;
  overflow: hidden;
}

.about-content {
  grid-column: 4 / 13;
  width: 100%;
  color: var(--color-text);
  font-size: 2.5rem;
  line-height: 1.2;
  letter-spacing: -0.01em;
  font-weight: 400;
  text-align: left;
  box-sizing: border-box;
}

.about-content :global(p) {
  margin: 0 0 2rem 0;
  font-size: inherit;
  line-height: inherit;
  color: inherit;
}

.about-content :global(p:last-child) {
  margin-bottom: 0;
}

.about-content :global(h1),
.about-content :global(h2),
.about-content :global(h3) {
}

.about-content :global(img) {
  width: 100%;
  max-width: 100%;
  height: auto;
  border-radius: 24px;
  margin: 3rem 0;
  display: block;
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.12),
    0 2px 8px rgba(0, 0, 0, 0.08);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.about-content :global(img:hover) {
  transform: translateY(-4px);
  box-shadow: 
    0 16px 48px rgba(0, 0, 0, 0.16),
    0 8px 16px rgba(0, 0, 0, 0.12);
}

.about-content :global(strong) {
  font-weight: 700;
  color: var(--color-text);
}

.about-content :global(em) {
  font-style: italic;
  color: var(--color-text);
}

.about-content :global(a) {
  color: var(--color-text);
  text-decoration: underline;
  text-underline-offset: 0.2em;
  text-decoration-thickness: 2px;
  transition: all 0.2s ease;
}

.about-content :global(a:hover) {
  opacity: 0.7;
  text-decoration-thickness: 3px;
}

.about-content :global(ul), 
.about-content :global(ol) {
  margin: 2rem 0;
  padding-left: 2rem;
}

.about-content :global(li) {
  margin: 1rem 0;
  font-size: inherit;
  line-height: inherit;
}

.about-content :global(blockquote) {
  margin: 3rem 0;
  padding: 2rem;
  border-left: 4px solid var(--color-text);
  background: rgba(var(--color-text-rgb), 0.05);
  border-radius: 12px;
  font-style: italic;
  font-size: clamp(1.8rem, 3.5vw, 3rem);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .about-container {
    padding: 4rem 0;
  }
  
  .about-content {
    grid-column: 2 / -2;
    font-size: 2rem;
    padding: 0;
  }
  
  .about-content :global(h1) {
    font-size: 3rem;
  }

  .about-content :global(h2) {
    font-size: 2.75rem;
  }

  .about-content :global(h3) {
    font-size: 2.5rem;
  }
  
  .about-content :global(img) {
    margin: 2rem 0;
  }
  
  .about-content :global(ul), 
  .about-content :global(ol) {
    padding-left: 1.5rem;
  }
  
  .about-content :global(blockquote) {
    margin: 2rem 0;
    padding: 1.5rem;
  }
}

@media (max-width: 480px) {
  .about-container {
    padding: 2rem 0;
  }
  
  .about-content {
    grid-column: 2 / -2;
    font-size: 1.75rem;
    padding: 0;
  }

  .about-content :global(h1) {
    font-size: 2.5rem;
  }

  .about-content :global(h2) {
    font-size: 2.25rem;
  }

  .about-content :global(h3) {
    font-size: 2rem;
  }
}
</style> 